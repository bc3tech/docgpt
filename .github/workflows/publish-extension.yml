name: Publish Extension

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yml
    secrets: inherit

  publish-to-marketplace:
    needs: build-and-test
    runs-on: windows-latest
    env:
      EXTENSION_VERSION: ${{ needs.build-and-test.outputs.extVersion }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          sparse-checkout: |
            DocGpt.Vsix/publishmanifest.json

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: DocGPT-signed.vsix
          path: .\o

      - name: Show manifest
        run: |
          cat DocGpt.Vsix/publishmanifest.json

      - name: Publish to marketplace
        run: |
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VSSDK\VisualStudioIntegration\Tools\Bin\VsixPublisher.exe" publish -personalAccessToken ${{ secrets.MARKETPLACE_PAT }} -payload .\o\DocGPT.vsix -publishManifest .\DocGpt.Vsix\publishmanifest.json -ignoreWarnings VsixPub0023

        # uses: cezarypiatek/VsixPublisherAction@1.1
        # with:
        #   extension-file: .\o\DocGPT.vsix
        #   publish-manifest-file: .\DocGpt.Vsix\publishmanifest.json
        #   personal-access-code: ${{ secrets.MARKETPLACE_PAT }}


  publish-gh-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      EXTENSION_VERSION: ${{ needs.build-and-test.outputs.extVersion }}
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          sparse-checkout: |
            README.md

      - name: Create tag
        run: |
          echo "Version: ${{ env.EXTENSION_VERSION }}"

          git -c user.name="GitHub Actions" -c user.email="actions@github.com" tag "v${{ env.EXTENSION_VERSION }}" "${{ github.sha }}"
          git push --tags origin

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: DocGPT-signed.vsix
          path: ./o

      - name: Create Release
        run: |
          gh release create "v${{ env.EXTENSION_VERSION }}" \
          --generate-notes \
          --draft

      - name: Upload Release Asset
        run: |
          gh release upload "v${{ env.EXTENSION_VERSION }}" \
          ./o/DocGPT.vsix#Installer \
          --clobber
